# This image uses the `run-java.sh` script to run the application for prod profile.
# The `run-java.sh` script can be enabled for develpoment profile by uncommenting the line in the dev context
# The Dockerfile can be used to build and run any Java application (flat classpath or fat jar) with minimal changes
# The complete list of environment variables and java runtime tuning
# For the run-java.sh customization, see the complete list @ https://github.com/fabric8io-images/run-java-sh/blob/master/fish-pepper/run-java-sh/readme.md
FROM registry.access.redhat.com/ubi9/openjdk-17:1.14-2.1681917140 as dev

ENV LANGUAGE='en_US:en'

COPY --chown=185 .mvn .mvn
COPY --chown=185 pom.xml mvnw mvnw.cmd ./

RUN ./mvnw dependency:resolve

COPY --chown=185 src src

EXPOSE 8080

USER 185
# The following command enables the hot deploy of the application
CMD ["./mvnw", "-Dquarkus.http.host=0.0.0.0", "-Djava.util.logging.manager=org.jboss.logmanager.LogManager", "quarkus:dev"]

# Uncomment the next three lines if you want to use run-java.sh file with the prrovided flags
#RUN ./mvnw clean package
#ENV JAVA_APP_JAR="/home/default/target/quarkus-app/quarkus-run.jar"
#CMD ["/usr/local/s2i/run"]

FROM dev AS builder
# build the fast jar file
RUN ./mvnw clean package -Dmaven.test.skip

# Prod stage
FROM registry.access.redhat.com/ubi9/openjdk-17:1.14-2.1681917140 AS prod

ENV LANGUAGE='en_US:en'

COPY --from=builder /home/default/target/quarkus-app/lib/ /deployments/lib/
COPY --from=builder /home/default/target/quarkus-app/*.jar /deployments/
COPY --from=builder /home/default/target/quarkus-app/app/ /deployments/app/
COPY --from=builder /home/default/target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8080
USER 185
ENV AB_JOLOKIA_OFF=""
ENV JAVA_OPTS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

CMD ["/usr/local/s2i/run"]
